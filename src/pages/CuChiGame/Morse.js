import React, { useState, useEffect } from 'react';
import Loading from './Loading';
import '../../styles/CuChiStyle/Morse.css';
import ReactAudioPlayer from 'react-audio-player';
import audioFile from '../../assets/CuChiGame/audio/morse.wav'; // Import t·ªáp √¢m thanh
import characterImg from '../../assets/CuChiGame/images/MODEL_CUCHI_NOBG.png'; // Nh√¢n v·∫≠t
import { useNavigate } from 'react-router-dom';
import morsetable from '../../assets/CuChiGame/images/Morse.png';
// morse sound
import m1 from '../../assets/CuChiGame/audio/CUCHICON.wav';
import m2 from '../../assets/CuChiGame/audio/SAIGONMAT.wav';


const Morse = () => {
    const [loading, setLoading] = useState(false); // mu·ªën load th√¨ ƒë·ªïi th√†nh true
    const [dialogStep, setDialogStep] = useState(0); // B·∫Øt ƒë·∫ßu lu√¥n t·ª´ c√¢u ƒë·∫ßu
    const [showAlert, setShowAlert] = useState(true); // Qu·∫£n l√Ω tr·∫°ng th√°i alert
    const [audioPlaying, setAudioPlaying] = useState(false); // Tr·∫°ng th√°i nh·∫°c
    // const navigate = useNavigate();
    const [userInput, setUserInput] = useState('');
  
    const dialogues = [
      'T√¨nh b√°o ·ªü l√≤ng S√†i g√≤n v√† H√† N·ªôi v·ª´a g·ª≠i m·∫≠t th∆∞ t·ªõi, ƒë·ªìng ch√≠ gi·∫£i m√£ g·∫•p ƒë·ªÉ anh em tri·ªÉn khai. ƒë·ª´ng ch·ª´ng ch·ªù k·∫ªo l·ª° m·∫•t th·ªùi c∆° ph·∫£n c√¥ng.',
      'Ch√†o m·ª´ng ƒë·ªìng ch√≠ t√¨nh b√°o ƒë√£ ƒë·∫øn ƒë√¢y, ƒë·ªìng ch√≠ h√£y t√¨m hi·ªÉu v√† ho√†n th√†nh t·ªët nhi·ªám v·ª• ƒë∆∞·ª£c giao.',
      'ƒê·ªìng ch√≠ h√£y lu√¥n trong t∆∞ th·∫ø s·∫µn s√†ng chi·∫øn ƒë·∫•u !!!!!!!!!',
      'B·∫Øt ƒë·∫ßu th√¥i n√†o!',
      'C√≥ v·∫ª ƒë·ªìng ch√≠ l√† ng∆∞·ªùi m·ªõi t√¥i s·∫Ω gi·∫£i th√≠ch m·ªôt ch√∫t v·ªÅ n∆°i n√†y ƒë·ªÉ ƒë·ªìng ch√≠ n·∫Øm b·∫Øt.',
      'ƒê·ªãa ƒë·∫°o C·ªß Chi, c√°ch TP.HCM kho·∫£ng 70km v·ªÅ ph√≠a T√¢y B·∫Øc, l√† bi·ªÉu t∆∞·ª£ng cho s·ª± s√°ng t·∫°o v√† ki√™n c∆∞·ªùng c·ªßa qu√¢n v√† d√¢n C·ªß Chi trong cu·ªôc kh√°ng chi·∫øn ch·ªëng M·ªπ.',
      'H·ªá th·ªëng c·ªßa ta g·ªìm c√°c ƒë∆∞·ªùng h·∫ßm ƒë·ªì s·ªô v·ªõi kho·∫£ng 250km ƒë∆∞·ªùng h·∫ßm t·ªèa r·ªông nh∆∞ m·∫°ng nh·ªán, v√† g·ªìm nhi·ªÅu c√¥ng tr√¨nh li√™n ho√†n nh∆∞ chi·∫øn h√†o, ·ª• chi·∫øn ƒë·∫•u, h·∫ßm ƒÉn ng·ªß, h·ªôi h·ªçp, qu√¢n y, kho t√†ng, gi·∫øng n∆∞·ªõc, b·∫øp Ho√†ng C·∫ßm.',
      'N∆°i ƒë√¢y ƒë√£ h√¨nh th√†nh t·ª´ nh·ªØng h·∫ßm b√≠ m·∫≠t th·ªùi kh√°ng chi·∫øn ch·ªëng Ph√°p, v√† ·ªü giai ƒëo·∫°n kh√°ng chi·∫øn ch·ªëng M·ªπ n√†y n√≥ l·∫°i c√†n ph√°t tri·ªÉn m·∫°nh m·∫Ω h∆°n, ƒë·∫∑c bi·ªát sau c√°c cu·ªôc c√†n qu√©t l·ªõn c·ªßa ƒë·ªãch.',
      'Bi·ªát danh "L√†ng ng·∫ßm trong l√≤ng ƒë·∫•t": Th·ªÉ hi·ªán r√µ n√©t cu·ªôc s·ªëng v√† chi·∫øn ƒë·∫•u di·ªÖn ra d∆∞·ªõi l√≤ng ƒë·∫•t c·ªßa ch√∫ng t√¥i nh·ªØng con ng∆∞·ªùi C·ªß Chi.',
      'H√£y kh·∫Øc s√¢u nh·ªØng k·ª≥ t√≠ch h√†o h√πng n√†y ƒë·ªÉ mai n√†y khi th·ªëng nh·∫•t n√≥ kh√¥ng b·ªã mai m·ªôt ƒëi.',
  
    ];
  
    // useEffect(() => {
    //   // Th·ªùi gian ch·ªù cho loading
    //   const timer = setTimeout(() => setLoading(false), 3000);
    //   return () => clearTimeout(timer);
    // }, []);

    const handleSubmit = () => {
        console.log("Ng∆∞·ªùi d√πng nh·∫≠p:", userInput);
        // x·ª≠ l√Ω th√™m t·∫°i ƒë√¢y n·∫øu c·∫ßn ki·ªÉm tra ƒë√∫ng/sai
      };
  
    const handleNextDialog = () => {
      if (dialogStep < dialogues.length - 1) {
        setDialogStep(dialogStep + 1);
      } else {
        // K·∫øt th√∫c h·ªôi tho·∫°i, ·∫©n text box
        setDialogStep(-1);
        
      }
    };
  
    // H√†m x·ª≠ l√Ω khi click v√†o b·∫•t k·ª≥ ƒë√¢u
    const handleClickAnywhere = () => {
      if (!audioPlaying) {
        setAudioPlaying(true);
      }
    };
  
    return (
      <>
        {loading ? (
          <Loading />
        ) : (
          <div className="Morse-background" onClick={handleClickAnywhere}>
            {/* Alert thanh th√¥ng b√°o */}
            {showAlert && (
              <div className="alert-banner">
                üéñÔ∏è Ch√∫ng ta nh·∫≠n ƒë∆∞·ª£c m·∫≠t th∆∞, GI·∫¢I M√É G·∫§P!!!!!!!!<br />
                ‚ùå C√¥ng ngh·ªá c·ªßa ta c√≤n h·∫°n ch·∫ø n√™n h√£y gi·∫£i tu·∫ßn t·ª± ƒë·ªÉ kh√¥ng b·ªã nhi·ªÖu s√≥ng!!!!!
                <button className="close-alert" onClick={() => setShowAlert(false)}>
                  ‚ùå
                </button>
              </div>
            )}
  
            {/* Nh√¢n v·∫≠t */}
            <div className="character-wrapper">
            <img 
              src={characterImg} 
              alt="Character" 
              className="character-model" 
            />
            {/* H·ªôp tho·∫°i */}
            {dialogStep !== -1 && (
              <div className="dialog-box">
                <p>{dialogues[dialogStep]}</p>
                <button onClick={handleNextDialog}>Ti·∫øp t·ª•c</button>
              </div>
            )}
            </div>
  
            <div className="image-container">
                {dialogStep >= 0 && <img src={morsetable} alt="mtable" className="mtable" />}
                
            </div>


            <div className="audio-buttons">
  {/* C·∫∑p 1: M·∫≠t m√£ t·ª´ S√†i G√≤n */}
  <div className="audio-group">
    <button onClick={() => new Audio(m1).play()}>M·∫≠t m√£ t·ª´ S√†i G√≤n</button>
    <div className="decode-input">
      <input type="text" placeholder="Gi·∫£i m√£ t·∫°i ƒë√¢y..." />
      <button>Submit</button>
    </div>
  </div>

  {/* C·∫∑p 2: M·∫≠t m√£ t·ª´ H√† N·ªôi */}
  <div className="audio-group">
    <button onClick={() => new Audio(m2).play()}>M·∫≠t m√£ t·ª´ H√† N·ªôi</button>
    <div className="decode-input">
      <input type="text" placeholder="Gi·∫£i m√£ t·∫°i ƒë√¢y..." />
      <button>Submit</button>
    </div>
  </div>
</div>

            
         
            {/* Nh·∫°c n·ªÅn */}
            {audioPlaying && (
              <ReactAudioPlayer
                src={audioFile}
                autoPlay
                loop
                controls={false}
                onError={() => console.log("Error loading audio")}
              />
            )}
          </div>
        )}
      </>
    );
  };
  
 
export default Morse;