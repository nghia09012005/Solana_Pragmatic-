import React, { useState } from 'react';
import { TiChevronLeftOutline, TiChevronRightOutline } from "react-icons/ti";
import { BsArrowsFullscreen } from "react-icons/bs";
import { FaHome } from 'react-icons/fa';
import { useNavigate } from 'react-router-dom';
import '../styles/MuseumPage.css';

const CARDS = [
  {
    title: "C·ªìng Chi√™ng T√¢y Nguy√™n",
    
    description: "Ti·∫øng c·ªìng chi√™ng ng√¢n vang, h·ªìn thi√™ng n√∫i r·ª´ng th·ª©c gi·∫•c, k·∫øt n·ªëi c·ªông ƒë·ªìng, v·ªçng m√£i ng√†n ƒë·ªùi.",
    
    artist: {
      name: "T√¢y Nguy√™n",
      year: "Truy·ªÅn th·ªëng l√¢u ƒë·ªùi",
      location: "T√¢y Nguy√™n, Vi·ªát Nam",
      image: "./images/character/cong-chieng.png"
    },
    image: "./images/cong-chieng.png"
  },
  {
    title: "Tranh ƒê√¥ng H·ªì",
    
    description: "M·ªói b·ª©c tranh ƒê√¥ng H·ªì l√† m·ªôt th√¥ng ƒëi·ªáp, m·ªôt ∆∞·ªõc v·ªçng v·ªÅ cu·ªôc s·ªëng t·ªët ƒë·∫πp v√† s·ª± may m·∫Øn cho gia ƒë√¨nh, c·ªông ƒë·ªìng.",
    
    artist: {
      name: "L√†ng ƒê√¥ng H·ªì",
      
      location: "Song H·ªì, Thu·∫≠n Th√†nh, B·∫Øc Ninh, Vi·ªát Nam",
      image: "/images/character/tranh-dong-ho.png"
    },
    image: "./images/tranh-dong-ho.png"
  },
  {
    title: "ƒê·ªãa ƒê·∫°o C·ªß Chi",
    
    description: "C·ªß Chi l√† ni·ªÅm t·ª± h√†o, l√† minh ch·ª©ng cho s·ª©c m·∫°nh c·ªßa chi·∫øn tranh nh√¢n d√¢n.",
    
    artist: {
      name: "C·ªß Chi",
      
      location: "x√£ Ph√∫ M·ªπ H∆∞ng, huy·ªán C·ªß Chi, TP.HCM, Vi·ªát Nam",
      image: "/images/character/dia-dao.png"
    },
    image: "/images/dia-dao.png"
  },
  {
    title: "Ng√†y gi·∫£i ph√≥ng mi·ªÅn Nam",
    
    description: "Ng√†y 30 th√°ng 4 l√† ng√†y m√† d√¢n t·ªôc Vi·ªát Nam th·ªÉ hi·ªán s·ª± ki√™n c∆∞·ªùng, b·∫•t khu·∫•t, m·ªôt ng√†y l·ªãch s·ª≠ kh√¥ng th·ªÉ n√†o qu√™n.",
    
    artist: {
      name: "S√†i G√≤n",
     
      location: "S√†i G√≤n (TPHCM), Vi·ªát Nam",
      image: "/images/character/giai-phong.png"
    },
    image: "/images/giai-phong.png"
  },
  {
    title: "Tr·ªëng ƒê·ªìng \n ƒê√¥ng S∆°n",
  
    description: "Tr·ªëng ƒë·ªìng ƒê√¥ng S∆°n l√† bi·ªÉu t∆∞·ª£ng c·ªßa s·ª± th·ªãnh v∆∞·ª£ng v√† vƒÉn minh c·ªßa d√¢n t·ªôc Vi·ªát Nam trong su·ªët chi·ªÅu d√†i l·ªãch s·ª≠.",
    
    artist: {
      name: "ƒê√¥ng S∆°n",
      location: "x√£ ƒê√¥ng S∆°n, t·ªânh Thanh H√≥a, Vi·ªát Nam",
      image: "/images/character/trong-dong-dong-son.png"
    },
    image: "/images/trong-dong-dong-son.png"
  },
  {
    title: "D√¢n ca Quan H·ªç",
    
    description: "Quan H·ªç l√† s·ª± k·∫øt n·ªëi gi·ªØa c√°c th·∫ø h·ªá, gi·ªØa ng∆∞·ªùi v·ªõi ng∆∞·ªùi, th·ªÉ hi·ªán l√≤ng hi·∫øu kh√°ch v√† s·ª± g·∫Øn b√≥ v·ªõi c·ªôi ngu·ªìn",
    
    artist: {
      name: "L√†ng Quan H·ªç",
      
      location: "B·∫Øc Ninh, Vi·ªát Nam",
      image: "/images/character/quan-ho.png"
    },
    image: "/images/quan-ho.png"
  }
];

const MAX_VISIBILITY = 3;  

const Card = ({ artwork, isActive }) => {
  const navigate = useNavigate();
  const [isTransitioning, setIsTransitioning] = useState(false);

  // Ki·ªÉm tra xem game c√≥ b·ªã kh√≥a kh√¥ng
  const isLocked = artwork.title === "Tr·ªëng ƒê·ªìng \n ƒê√¥ng S∆°n" || artwork.title === "D√¢n ca Quan H·ªç";

  const handleExpand = () => {
    // N·∫øu game b·ªã kh√≥a, kh√¥ng l√†m g√¨ c·∫£
    if (isLocked) {
      alert("Game n√†y hi·ªán ƒëang ƒë∆∞·ª£c ph√°t tri·ªÉn. Vui l√≤ng quay l·∫°i sau!");
      return;
    }

    setIsTransitioning(true);
    
    // T·∫°o overlay v√† vortex elements
    const overlay = document.createElement('div');
    overlay.className = 'transition-overlay';
    document.body.appendChild(overlay);

    const vortex = document.createElement('div');
    vortex.className = 'vortex';
    document.body.appendChild(vortex);

    // K√≠ch ho·∫°t hi·ªáu ·ª©ng
    requestAnimationFrame(() => {
      overlay.classList.add('active');
      document.querySelector('.card.active').classList.add('transitioning');
    });

    // Chuy·ªÉn h∆∞·ªõng sau khi animation ho√†n th√†nh
    setTimeout(() => {
      if (artwork.title === "ƒê·ªãa ƒê·∫°o C·ªß Chi") {
        navigate('/cuchigame');
      } else if (artwork.title === "Tranh ƒê√¥ng H·ªì") {
        navigate('/donghogame');
      } else if (artwork.title === "C·ªìng Chi√™ng T√¢y Nguy√™n") {
        navigate('/taynguyengame');
      } else if (artwork.title === "Ng√†y gi·∫£i ph√≥ng mi·ªÅn Nam"){
        navigate('/tankgame');
      }
       else {
        navigate(`/artwork/${artwork.id}`, { state: { artwork } });
      }
      
      // D·ªçn d·∫πp elements
      overlay.remove();
      vortex.remove();
    }, 2000);
  };

  return (
    <div className={`card ${isActive ? 'active' : ''} ${isTransitioning ? 'transitioning' : ''} ${isLocked ? 'locked-card' : ''}`}>
      {isLocked && (
        <div className="locked-overlay">
          <div className="big-lock-icon">
            üîí</div>
        </div>
      )}
      <button 
        className={`expand-button ${isLocked ? 'locked' : ''}`} 
        onClick={handleExpand}
        title={isLocked ? "Game ƒëang ƒë∆∞·ª£c ph√°t tri·ªÉn" : "Kh√°m ph√°"}
      >
        {isLocked ? (
          <>
            <span className="lock-icon">üîí</span>
            S·∫Øp ra m·∫Øt
          </>
        ) : (
          <>
            <BsArrowsFullscreen />
            Kh√°m ph√°
          </>
        )}
      </button>
      <img src={artwork.image} alt={artwork.title} className="artwork-image" />
      <div className="artwork-info">
        <h2>{artwork.title}</h2>
        
        <p className="quote">"{artwork.description}"</p>
        <div className="details">
          
        </div>  
        <div className="artist-info">
          <img src={artwork.artist.image} alt={artwork.artist.name} className="artist-image" />
          <div className="artist-details">
            <h3>{artwork.artist.name}</h3>
           
            <p>{artwork.artist.location}</p>
          </div>
        </div>
      </div>
    </div>
  );
};  

const Carousel = ({ children }) => {  
  const [active, setActive] = useState(0);  
  const count = React.Children.count(children);  

  return (  
    <div className="carousel">  
      {active > 0 && (  
        <button className="nav left" onClick={() => setActive((i) => i - 1)}>  
          <TiChevronLeftOutline />  
        </button>  
      )}  
      {React.Children.map(children, (child, i) => (  
        <div  
          className="card-container"  
          style={{  
            "--active": i === active ? 1 : 0,  
            "--offset": (active - i) / 3,  
            "--direction": Math.sign(active - i),  
            "--abs-offset": Math.abs(active - i) / 3,  
            "pointer-events": active === i ? "auto" : "none",  
            opacity: Math.abs(active - i) >= MAX_VISIBILITY ? "0" : "1",  
            display: Math.abs(active - i) > MAX_VISIBILITY ? "none" : "block",  
          }}  
        >  
          {React.cloneElement(child, { isActive: i === active })}
        </div>  
      ))}  
      {active < count - 1 && (  
        <button className="nav right" onClick={() => setActive((i) => i + 1)}>  
          <TiChevronRightOutline />  
        </button>  
      )}  
    </div>  
  );  
};  

const MuseumPage = () => {
  const navigate = useNavigate();

  const goToHome = () => {
    navigate('/');
  };

  return (
  <div className='museum-page-body'>
    <button className="home-button" onClick={goToHome}>
      <i className="fas fa-home"></i>
      {/* <span>Trang ch·ªß</span> */}
    </button>
  <div className="app">  
    <Carousel>  
      {CARDS.map((artwork, i) => (  
        <Card  
          key={i}
          artwork={artwork}  
          isActive={i === 0}  
        />    
      ))}  
    </Carousel>  
  </div>  
  </div>
);  
};

export default MuseumPage;